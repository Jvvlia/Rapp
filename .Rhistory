shiny::runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
knitr::opts_chunk$set(echo = FALSE)
data(cars)
mean(cars$speed)
print(head(cars))
summary(mtcars$cyl)[3:4]
summary(mtcars$mpg)[3:4]
p<-getwd()
source(paste0(p,'/szeregi.R'))
f1("USDPLN")
getData <- function(name) {
data <-
read.csv(paste0("https://stooq.pl/q/d/l/?s=",name,"&d1=20200101&d2=20201206&i=d")
)
}
d <- getData("USDPLN")
x<-d[,5]
hist(x,breaks = 11, col=rainbow(15), border = "darkblue", probability = T,
main="Histogram USDPLN")
lines(density(x),col="red",lty="dotted",lwd=3)
rug(x,col="red")
library(wordcloud2)
text<-c("PDF documents are generated through the LaTeX files generated from R
Markdown. A highly surprising fact to LaTeX beginners is that figures float by default even
if you generate a plot in a code chunk on the first page, the whole figure environment
may float to the next page. This is just how LaTeX works by default. It has a tendency to
float figures to the top or bottom of pages. Although it can be annoying and distracting,
we recommend that you refrain from playing the “Whac-A-Mole” game in the beginning
of your writing, desparately trying to position figures “correctly” while they seem to be
always dodging you. You may wish to fine-tune the positions once the content is
complete using the fig.pos chunk option (e.g., fig.pos = 'h'). See
(https://www.overleaf.com/learn/latex/Positioning_images_and_tables) for possible
values of fig.pos and more general tips about this behavior in LaTeX. In short, this can be a
difficult problem for PDF output.
To place multiple figures side-by-side from the same code chunk, you can use the
fig.show='hold' option along with the out.width option. Figure 2.5 shows an example with
two plots, each with a width of 50%.")
text2<-gsub("\n","",text)
text2<-gsub("the","",text2)
text3<-unlist(strsplit(text2,split=" "))
df<-as.data.frame(table(text3))
wordcloud2(df, size=0.6, color='random-dark',shape='star')
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('C:/Users/julia/Downloads')
runApp('C:/Users/julia/Downloads')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
runApp()
